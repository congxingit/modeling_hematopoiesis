DESCRIPTION
"Model unperturbed"

PREDICTOR
t               T   "days"     "time"    0   600

COMPARTMENTS


STATES

f2h  C   "au"      "size"       cyc 1 "f2h" 1
f2l  C   "au"      "size"       cyc 1 "f2l" 1

f3h  C   "au"      "size"       cyc 1 "f3h" 1
f3l  C   "au"      "size"       cyc 1 "f3l" 1

f4h  C   "au"      "size"       cyc 1 "f4h" 1
f4l  C   "au"      "size"       cyc 1 "f4l" 1

fcm  C   "au"      "size"       cyc 1 "fcm" 1
fcl  C   "au"      "size"       cyc 1 "fcl" 1

n1h  C   "au"      "size"       cyc 1 "n1h" 1

r2  C   "au"      "size"       cyc 1 "r2" 1
r3  C   "au"      "size"       cyc 1 "r3" 1
r4  C   "au"      "size"       cyc 1 "r4" 1

rcm  C   "au"      "size"       cyc 1 "rcm" 1
rcl  C   "au"      "size"       cyc 1 "rcl" 1

s2  C   "au"      "size"       cyc 1 "s2" 1
s3  C   "au"      "size"       cyc 1 "s3" 1
s4  C   "au"      "size"       cyc 1 "s4" 1

x1h  C   "au"      "size"       cyc 1 "x1h" 1

x2h  C   "au"      "size"       cyc 1 "x2h" 1
x2l  C   "au"      "size"       cyc 1 "x2l" 1

x3h  C   "au"      "size"       cyc 1 "x3h" 1
x3l  C   "au"      "size"       cyc 1 "x3l" 1

x4h  C   "au"      "size"       cyc 1 "x4h" 1
x4l  C   "au"      "size"       cyc 1 "x4l" 1

xcmp   C   "au"      "size"       cyc 1 "xcmp" 1
xmkp1   C   "au"      "size"       cyc 1 "xmkp1" 1
xmkp2   C   "au"      "size"       cyc 1 "xmkp2" 1

fmep  C   "au"      "size"       cyc 1 "fmep" 1
fgmp  C   "au"      "size"       cyc 1 "fgmp" 1

rmep  C   "au"      "size"       cyc 1 "rmep" 1
rgmp  C   "au"      "size"       cyc 1 "rgmp" 1

fmkp1  C   "au"      "size"       cyc 1 "fmkp1" 1
fmkp2  C   "au"      "size"       cyc 1 "fmkp2" 1
r_mkp1_2l  C   "au"      "size"       cyc 1 "r_mkp1_2l" 1
r_mkp2_cmp  C   "au"      "size"       cyc 1 "r_mkp2_cmp" 1

fmk  C   "au"      "size"       cyc 1 "fmk" 1
fplt  C   "au"      "size"       cyc 1 "fplt" 1

r_mk_mkp1   C   "au"      "size"       cyc 1 "r_mk_mkp1" 1
r_plt   C   "au"      "size"       cyc 1 "r_plt" 1

fe1  C   "au"      "size"       cyc 1 "fe1" 1
fe  C   "au"      "size"       cyc 1 "fe" 1

fg1  C   "au"      "size"       cyc 1 "fg1" 1
fg  C   "au"      "size"       cyc 1 "fg" 1


INPUTS



ODES

// Labeling frequency 

"q_2l*s2*(f2l-f2h) + a_1hh*(f1h-f2h)/r2"
"q_2h*(f2h-f2l)/s2 + a_1hl*(f1h-f2l)/(s2*r2)"

"q_3l*s3*(f3l-f3h) + a_2hh*(f2h-f3h)/r3 + a_2lh*s2*(f2l-f3h)/r3"
"q_3h*(f3h-f3l)/s3 + a_2ll*s2*(f2l-f3l)/(s3*r3) + a_2hl*(f2h-f3l)/(s3*r3)"

"q_4l*s4*(f4l-f4h) + a_3hh*(f3h-f4h)/r4 + a_3lh*s3*(f3l-f4h)/r4"
"q_4h*(f4h-f4l)/s4 + a_3ll*s3*(f3l-f4l)/(s4*r4) + a_3hl*(f3h-f4l)/(s4*r4)"

"a_4hcm*(f4h-fcm)/rcm + a_4lcm*s4*(f4l-fcm)/rcm"
"a_4hcl*(f4h-fcl)/rcl + a_4lcl*s4*(f4l-fcl)/rcl"


// compartment size of ES HSC

"-k_1h*n1h"


// r: compartment size ratios n(i+1)_sca1_hi/n(i)_sca1_hi

"a_1hh - (k_2h-k_1h-q_2l*s2)*r2"
"a_2hh + a_2lh*s2 - (k_3h-k_2h+q_2l*s2-q_3l*s3+a_1hh/r2)*r3"
"a_3hh + a_3lh*s3 - (k_4h-k_3h+q_3l*s3-q_4l*s4+a_2hh/r3+a_2lh*s2/r3)*r4"

"a_4hcm + a_4lcm*s4 - (k_cm-k_4h+q_4l*s4+a_3hh/r4+a_3lh*s3/r4)*rcm"
"a_4hcl + a_4lcl*s4 - (k_cl-k_4h+q_4l*s4+a_3hh/r4+a_3lh*s3/r4)*rcl"


// s: compartment size ratios n(i)_sca1_lo/n(i)_sca1_hi

"q_2h - (k_2l-k_2h)*s2 - q_2l*s2^2 + (a_1hl-a_1hh*s2)/r2"
"q_3h - (k_3l-k_3h)*s3 - q_3l*s3^2 + (a_2hl+a_2ll*s2-a_2hh*s3-a_2lh*s2*s3)/r3"
"q_4h - (k_4l-k_4h)*s4 - q_4l*s4^2 + (a_3hl+a_3ll*s3-a_3hh*s4-a_3lh*s3*s4)/r4"


// x: mean H2B-GFP intensity in each cell compartment

"v - k*x1h -(l_1h/2)*x1h"

"v - k*x2h + (a_1hh+u_1hh)*x1h/(2*r2) - (l_2h/2+q_2l*s2+a_1hh/r2)*x2h + q_2l*s2*x2l"
"v - k*x2l + (a_1hl+u_1hl)*x1h/(2*r2*s2) - (l_2l/2+q_2h/s2+a_1hl/(r2*s2))*x2l + (q_2h/s2)*x2h"

"v - k*x3h + (a_2hh+u_2hh)*x2h/(2*r3) + (a_2lh+u_2lh)*s2*x2l/(2*r3) - (l_3h/2+q_3l*s3+(a_2hh+a_2lh*s2)/r3)*x3h + q_3l*s3*x3l"
"v - k*x3l + (a_2ll+u_2ll)*s2*x2l/(2*r3*s3) + (a_2hl+u_2hl)*x2h/(2*r3*s3) - (l_3l/2+q_3h/s3+(a_2ll*s2+a_2hl)/(r3*s3))*x3l + (q_3h/s3)*x3h"

"v - k*x4h + (a_3hh+u_3hh)*x3h/(2*r4) + (a_3lh+u_3lh)*s3*x3l/(2*r4) - (l_4h/2+q_4l*s4+(a_3hh+a_3lh*s3)/r4)*x4h + q_4l*s4*x4l"
"v - k*x4l + (a_3ll+u_3ll)*s3*x3l/(2*r4*s4) + (a_3hl+u_3hl)*x3h/(2*r4*s4) - (l_4l/2+q_4h/s4+(a_3ll*s3+a_3hl)/(r4*s4))*x4l + (q_4h/s4)*x4h"

"v - k*xcmp + (a_4hcm)*x4h/(2*rcm) + (a_4lcm)*s4*x4l/(2*rcm) - (l_cmp/2+(a_4hcm+a_4lcm*s4)/rcm)*xcmp"

"v - k*xmkp1  + (a_2l_mkp1)*x2l/(2*r_mkp1_2l) - (l_mkp1/2+a_2l_mkp1/r_mkp1_2l)*xmkp1"

"v - k*xmkp2 + (a_cmp_mkp2)*xcmp/(2*r_mkp2_cmp) - (l_mkp2/2+a_cmp_mkp2/r_mkp2_cmp)*xmkp2"


// MEP and GMP labeling frequencies and compartment size ratios

"a_cmp_mep*(fcm - fmep)/rmep"
"a_cmp_gmp*(fcm - fgmp)/rgmp"

"a_cmp_mep - (k_mep - k_cm + a_4hcm/rcm + a_4lcm*s4/rcm)*rmep"
"a_cmp_gmp - (k_gmp - k_cm + a_4hcm/rcm + a_4lcm*s4/rcm)*rgmp"

//MkP labeling frequencies and compartment size ratios

"a_2l_mkp1*(f2l - fmkp1)/r_mkp1_2l"

"a_cmp_mkp2*(fcm - fmkp2)/r_mkp2_cmp"

"a_2l_mkp1 - (k_mkp1 - k_2l + a_1hl/(r2*s2) + q_2h/s2)*r_mkp1_2l"

"a_cmp_mkp2 - (k_mkp2 - k_cm + a_4hcm/rcm + a_4lcm*s4/rcm)*r_mkp2_cmp"


// platelet labeling frequencies and compartment size ratios

"a_mkp1*(fmkp1 - fmk)/r_mk_mkp1 + a_mkp2*(fmkp2 - fmk)/r_mk_mkp2"

"Amp*a_p*(fmk - fplt)/r_plt"

"a_mkp1+a_mkp2/r_mkp12-(a_p-k_mkp1+a_2l_mkp1/r_mkp1_2l)*r_mk_mkp1"

"Amp*a_p-(d_plt - a_p + a_mkp1/r_mk_mkp1 + a_mkp2/r_mk_mkp2)*r_plt"


// erythrocyte labeling frequency

"aa_e*(fmep - fe1)"
"aa_e*(fe1 - fe)"


// PMN (Gran) labeling frequency

"aa_g*(fgmp - fg1)"
"aa_g*(fg1 - fg)"


DERIVED

// Labeling frequencies for combined cell compartments

f12h C   "au"   "conc." "(f1h+r2*f2h)/(1+r2)" 
f12l C   "au"   "conc." "f2l"
f12 C   "au"   "conc." "(f1h+r2*f2h+s2*r2*f2l)/(1+r2+s2*r2)"

f3 C   "au"   "conc." "(f3h+s3*f3l)/(1+s3)"
f4 C   "au"   "conc." "(f4h+s4*f4l)/(1+s4)"

fmkp C   "au"   "conc." "(r_mkp1_2l*s2*fmkp1+r_mkp2_cmp*rcm*r4*r3*fmkp2)/(r_mkp1_2l*s2+r_mkp2_cmp*rcm*r4*r3)"


// net cell loss rates

k_1h C   "au"   "conc." "(a_1hh+a_1hl-l_1h+u_1hh+u_1hl)/2 + d_1h"
k_2h C   "au"   "conc." "(a_2hh+a_2hl-l_2h+u_2hh+u_2hl)/2 + q_2h + d_2h"
k_3h C   "au"   "conc." "(a_3hh+a_3hl-l_3h+u_3hh+u_3hl)/2 + q_3h + d_3h"
k_4h C   "au"   "conc." "(a_4hcm+a_4hcl-l_4h+u_4hcm+u_4hcl)/2 + q_4h + d_4h"

k_2l C   "au"   "conc." "(a_2ll+a_2lh+a_2l_mkp1-l_2l+u_2ll+u_2lh+u_2l_mkp1)/2 + q_2l + d_2l"
k_3l C   "au"   "conc." "(a_3ll+a_3lh-l_3l+u_3ll+u_3lh)/2 + q_3l + d_3l"
k_4l C   "au"   "conc." "(a_4lcm+a_4lcl-l_4l+u_4lcm+u_4lcl)/2 + q_4l + d_4l"

k_cm C   "au"   "conc." "(a_cmp_mep + a_cmp_gmp + a_cmp_mkp2 - l_cmp)/2 + d_cmp"
k_mkp1 C   "au"   "conc." "(a_mkp1 - l_mkp1 + u_mkp1)/2 + d_mkp1"
k_mkp2 C   "au"   "conc." "(a_mkp2 - l_mkp2+ u_mkp2)/2 + d_mkp2"


// Mean H2B-GFP intensities for combined cell compartments

x12h C   "au"   "conc." "(x1h + r2*x2h)/(1 + r2)"
x12l C   "au"   "conc." "x2l"
x12 C   "au"   "conc." "(x1h + r2*x2h + s2*r2*x2l)/(1 + r2 + s2*r2)"

x2 C   "au"   "conc." "(x2h+s2*x2l)/(1+s2)"
x3 C   "au"   "conc." "(x3h+s3*x3l)/(1+s3)"
x4 C   "au"   "conc." "(x4h+s4*x4l)/(1+s4)"


// Direct differentiation rates (without cell divisio) 
// cannot be larger than the total differentiation rates (alpha; here a)
// cu_** are the coefficients to constrain this relation.

u_1hh C   "au"   "conc." "cu_1hh*a_1hh"
u_2hh C   "au"   "conc." "cu_2hh*a_2hh" 
u_3hh C   "au"   "conc." "cu_3hh*a_3hh" 
u_4hcm C   "au"   "conc." "cu_4hcm*a_4hcm" 

u_1hl C   "au"   "conc." "cu_1hl*a_1hl"
u_2hl C   "au"   "conc." "cu_2hl*a_2hl" 
u_3hl C   "au"   "conc." "cu_3hl*a_3hl" 
u_4hcl C   "au"   "conc." "cu_4hcl*a_4hcl"

u_2lh C   "au"   "conc." "cu_2lh*a_2lh" 
u_3lh C   "au"   "conc." "cu_3lh*a_3lh" 
u_4lcm C   "au"   "conc." "cu_4lcm*a_4lcm"

u_2ll C   "au"   "conc." "cu_2ll*a_2ll" 
u_3ll C   "au"   "conc." "cu_3ll*a_3ll" 
u_4lcl C   "au"   "conc." "cu_4lcl*a_4lcl"

u_2l_mkp1 C   "au"   "conc." "cu_2l_mkp1*a_2l_mkp1" 

u_mkp1 C   "au"   "conc." "cu_mkp1*a_mkp1" 
u_mkp2 C   "au"   "conc." "cu_mkp2*a_mkp2"
 

// Compartment sizes of combined cell compartments

c1h C   "au"   "conc." "n1h"

c2h C   "au"   "conc." "r2*n1h"
c2l C   "au"   "conc." "s2*r2*n1h"

c12h C   "au"   "conc." "(1+r2)*n1h"
c12l C   "au"   "conc." "s2*r2*n1h"
c12 C   "au"   "conc." "(1+r2+s2*r2)*n1h"

c3h C   "au"   "conc." "r3*r2*n1h"
c3l C   "au"   "conc." "s3*r3*r2*n1h"
c3 C   "au"   "conc." "(r3*r2+s3*r3*r2)*n1h"

c4h C   "au"   "conc." "r4*r3*r2*n1h"
c4l C   "au"   "conc." "s4*r4*r3*r2*n1h"
c4 C   "au"   "conc." "(r4*r3*r2+s4*r4*r3*r2)*n1h"

ccm C   "au"   "conc." "rcm*r4*r3*r2*n1h"
ccl C   "au"   "conc." "rcl*r4*r3*r2*n1h"

cmep C   "au"   "conc." "rmep*rcm*r4*r3*r2*n1h"
cgmp C   "au"   "conc." "rgmp*rcm*r4*r3*r2*n1h"

cmkp1 C   "au"   "conc." "r_mkp1_2l*s2*r2*n1h"
cmkp2 C   "au"   "conc." "r_mkp2_cmp*rcm*r4*r3*r2*n1h"
cmkp C   "au"   "conc." "r_mkp1_2l*s2*r2*n1h+r_mkp2_cmp*rcm*r4*r3*r2*n1h"

r_mkp12 C   "au"   "conc." "r_mkp1_2l*s2/(r_mkp2_cmp*rcm*r4*r3)"

r_mk_mkp2 C   "au"   "conc." "r_mk_mkp1*r_mkp1_2l*s2/(r_mkp2_cmp*rcm*r4*r3)"

cmk  C   "au"   "conc." "(r_mk_mkp1*r_mkp1_2l*s2/(r_mkp2_cmp*rcm*r4*r3))*r_mkp2_cmp*rcm*r4*r3*r2*n1h"


OBSERVABLES


ERRORS



SUBSTITUTIONS


CONDITIONS

init_f2h "g_init_f2h*f1h"

init_f2l "g_init_f2l*f1h"


init_xmkp2 "g_init_xmkp2*init_xmkp1"

d_mkp2 "g_d_mkp2_unp*d_mkp1_unp"


init_f3h "0"
init_f3l "0"

init_f4h "0"
init_f4l "0"

init_fcm "0"
init_fcl "0"
init_fmep "0"
init_fgmp "0" 

init_fmkp1 "0"
init_fmkp2 "0"

init_fmk "0"
init_fplt "0"

init_fe1 "0"
init_fe "0"

init_fg1 "0"
init_fg "0"





